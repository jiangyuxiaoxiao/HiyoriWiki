import{_ as c,r as s,o as p,c as d,d as e,e as a,b as o,w as r,a as n}from"./app-4b0bc845.js";const l={},u=n(`<h2 id="一-介绍" tabindex="-1"><a class="header-anchor" href="#一-介绍" aria-hidden="true">#</a> 一. 介绍</h2><p><code>妃爱</code>提供了一些插件通用的功能，供插件使用。其实现统一放在<code>Hiyori/Utils</code>路径下。以下仅包含相关功能简介，详细实现说明请参考具体代码</p><h2 id="二-api—对外api请求" tabindex="-1"><a class="header-anchor" href="#二-api—对外api请求" aria-hidden="true">#</a> 二. <code>API</code>—对外API请求</h2><h3 id="_2-1-api" tabindex="-1"><a class="header-anchor" href="#_2-1-api" aria-hidden="true">#</a> 2.1 API</h3><h4 id="_2-1-1-api-qq" tabindex="-1"><a class="header-anchor" href="#_2-1-1-api-qq" aria-hidden="true">#</a> 2.1.1 API/QQ</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> Hiyori<span class="token punctuation">.</span>Utils<span class="token punctuation">.</span>API<span class="token punctuation">.</span>QQ <span class="token keyword">import</span> <span class="token operator">*</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>async def <code>GetQQGrouperName()</code> 群内昵称获取</li><li>async def <code>GetQQStrangerName()</code> 陌生人昵称获取</li><li>async def <code>GetGroupName()</code> 群名获取</li><li>def <code>GetQQAvatarUrl()</code> QQ头像Url</li><li>def <code>GetGroupAvatarUrl()</code> 群头像Url</li><li>async def <code>GetQQAvatarB644()</code> 获取用户头像的Base64编码</li></ul><hr><h3 id="_2-2-config-抽象配置类" tabindex="-1"><a class="header-anchor" href="#_2-2-config-抽象配置类" aria-hidden="true">#</a> 2.2 <code>Config</code>-抽象配置类</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> Hiyori<span class="token punctuation">.</span>Utils<span class="token punctuation">.</span>Config <span class="token keyword">import</span> Config
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>class Config</code> 提供插件配置文件读写的抽象类</li></ul><h3 id="_2-3-database—数据库操作" tabindex="-1"><a class="header-anchor" href="#_2-3-database—数据库操作" aria-hidden="true">#</a> 2.3 <code>Database</code>—数据库操作</h3>`,12),h=n(`<h3 id="_2-4-exception-自定义异常" tabindex="-1"><a class="header-anchor" href="#_2-4-exception-自定义异常" aria-hidden="true">#</a> 2.4 <code>Exception</code>-自定义异常</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> Hiyori<span class="token punctuation">.</span>Utils<span class="token punctuation">.</span>Exception<span class="token punctuation">.</span>Market <span class="token keyword">as</span> Market
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>Exception.Market.MarketException</code>-市场基类异常</li></ul><h3 id="_2-5-file—文件系统操作" tabindex="-1"><a class="header-anchor" href="#_2-5-file—文件系统操作" aria-hidden="true">#</a> 2.5 <code>File</code>—文件系统操作</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> Hiyori<span class="token punctuation">.</span>Utils<span class="token punctuation">.</span>File <span class="token keyword">import</span> <span class="token operator">*</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>def <code>DirExist()</code> 判断路径是否存在，不存在则创建。对于多级路径，即使多级路径均不存在，也会逐级创建。</li><li>def <code>JsonFileExist()</code> 判断json文件是否存在，不存在则初始化创建。要json文件所在的文件夹存在，否则报错。</li></ul><h3 id="_2-6-message-消息处理通用功能" tabindex="-1"><a class="header-anchor" href="#_2-6-message-消息处理通用功能" aria-hidden="true">#</a> 2.6 <code>Message</code>-消息处理通用功能</h3><h4 id="_2-6-1-message-at" tabindex="-1"><a class="header-anchor" href="#_2-6-1-message-at" aria-hidden="true">#</a> 2.6.1 <code>Message.At</code></h4><ul><li><code>GetAtQQs()</code> 提取消息中的所有at成员</li><li><code>clearAt()</code> 清除消息中的at信息。</li></ul><h4 id="_2-6-2-message-forward-message" tabindex="-1"><a class="header-anchor" href="#_2-6-2-message-forward-message" aria-hidden="true">#</a> 2.6.2 <code>Message.Forward_Message</code></h4><p>用于生成转发消息</p><h4 id="_2-6-3-message-image" tabindex="-1"><a class="header-anchor" href="#_2-6-3-message-image" aria-hidden="true">#</a> 2.6.3 <code>Message.Image</code></h4><p>用于处理图片消息，待补充</p><h3 id="_2-7-permissions—自定义权限角色" tabindex="-1"><a class="header-anchor" href="#_2-7-permissions—自定义权限角色" aria-hidden="true">#</a> 2.7 <code>Permissions</code>—自定义权限角色</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> Hiyori<span class="token punctuation">.</span>Utils<span class="token punctuation">.</span>Permission <span class="token keyword">import</span> <span class="token operator">*</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>def <code>HIYORI_OWNER</code> 妃爱管理员，对应权限级0</li><li>def <code>HIYORI_ADMIN</code> 妃爱领养员，对应权限级0或1</li></ul>`,16),k=e("br",null,null,-1),m=e("code",null,"权限控制",-1),_={href:"https://nonebot.dev/docs/appendices/permission",target:"_blank",rel:"noopener noreferrer"},v=n(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Hiyori/Plugins/Basic_plugins/Blacklist/__init__.py</span>

<span class="token keyword">from</span> nonebot <span class="token keyword">import</span> on_startswith<span class="token punctuation">,</span> on_regex
<span class="token keyword">from</span> nonebot<span class="token punctuation">.</span>adapters<span class="token punctuation">.</span>onebot<span class="token punctuation">.</span>v11 <span class="token keyword">import</span> Event<span class="token punctuation">,</span> GroupMessageEvent<span class="token punctuation">,</span> GROUP_OWNER<span class="token punctuation">,</span> GROUP_ADMIN
<span class="token keyword">from</span> Hiyori<span class="token punctuation">.</span>Utils<span class="token punctuation">.</span>Permissions <span class="token keyword">import</span> HIYORI_OWNER<span class="token punctuation">,</span> HIYORI_ADMIN

setBlacklist <span class="token operator">=</span> on_startswith<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;#设置黑名单&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;#ban&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> priority<span class="token operator">=</span>Priority<span class="token punctuation">.</span>系统优先级<span class="token punctuation">,</span> block<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
                             permission<span class="token operator">=</span>HIYORI_OWNER <span class="token operator">|</span> SUPERUSER<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-8-priority—预定义优先级" tabindex="-1"><a class="header-anchor" href="#_2-8-priority—预定义优先级" aria-hidden="true">#</a> 2.8 <code>Priority</code>—预定义优先级</h3><p><code>妃爱预定义了一些优先级供插件使用</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> nonebot <span class="token keyword">import</span> on_regex
<span class="token keyword">from</span> Hiyori<span class="token punctuation">.</span>Utils<span class="token punctuation">.</span>Priority <span class="token keyword">import</span> Priority

hello <span class="token operator">=</span> on_regex<span class="token punctuation">(</span><span class="token string">r&quot;^#hello world!$&quot;</span><span class="token punctuation">,</span> priority <span class="token operator">=</span> Priority<span class="token punctuation">.</span>普通优先级<span class="token punctuation">,</span> block<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-6-shop—商店功能" tabindex="-1"><a class="header-anchor" href="#_2-6-shop—商店功能" aria-hidden="true">#</a> 2.6 <code>Shop</code>—商店功能</h3><p>正在重构中...</p><h3 id="_2-7-spider—爬取" tabindex="-1"><a class="header-anchor" href="#_2-7-spider—爬取" aria-hidden="true">#</a> 2.7 <code>Spider</code>—爬取</h3><p>待补充</p>`,8);function b(y,g){const t=s("RouterLink"),i=s("ExternalLinkIcon");return p(),d("div",null,[u,e("p",null,[a("请参考 "),o(t,{to:"/docs/Developer/Data/DataBase.html"},{default:r(()=>[a("开发手册/数据存储/数据库")]),_:1})]),h,e("p",null,[a("用法："),k,a(" 需要了解Nonebot的"),m,a(),e("a",_,[a("https://nonebot.dev/docs/appendices/permission"),o(i)]),a(" 示例：")]),v])}const x=c(l,[["render",b],["__file","Utils.html.vue"]]);export{x as default};
