import{_ as n,o as s,c as a,a as t}from"./app-4b0bc845.js";const p={},o=t(`<h2 id="_1-概述" tabindex="-1"><a class="header-anchor" href="#_1-概述" aria-hidden="true">#</a> 1. 概述</h2><p><code>妃爱</code>支持自定义物品的开发。在<code>妃爱</code>中，物品的处理流程分为六个阶段：<code>购买前</code>、<code>购买</code>、<code>购买后</code>、<code>使用前</code>、<code>使用</code>、<code>使用后</code>。每个阶段通过一个处理函数来实现。通过继承物品基类<code>Hiyori.Utils.Shop.Item</code>并重写其物品处理函数可以实现自定义的物品功能。</p><p><code>妃爱</code>的物品处理函数与<code>nonebot2</code>的事件处理函数参数几乎一致，这使得可以像编写<code>nonebot2</code>事件处理一样自定义<code>妃爱</code>的物品处理。</p><p>以<code>唯一物品</code>类的实现为例进行说明：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Hiyori.Utils.Shop.items.py</span>

<span class="token keyword">from</span> nonebot<span class="token punctuation">.</span>adapters <span class="token keyword">import</span> Bot<span class="token punctuation">,</span> Event
<span class="token keyword">import</span> nonebot<span class="token punctuation">.</span>adapters<span class="token punctuation">.</span>onebot<span class="token punctuation">.</span>v11 <span class="token keyword">as</span> onebotV11
<span class="token keyword">from</span> nonebot<span class="token punctuation">.</span>typing <span class="token keyword">import</span> T_State
<span class="token keyword">from</span> nonebot<span class="token punctuation">.</span>matcher <span class="token keyword">import</span> Matcher

<span class="token keyword">from</span> Hiyori<span class="token punctuation">.</span>Utils<span class="token punctuation">.</span>Database <span class="token keyword">import</span> DB_Item
<span class="token keyword">from</span> Hiyori<span class="token punctuation">.</span>Utils<span class="token punctuation">.</span>Exception<span class="token punctuation">.</span>Market <span class="token keyword">import</span> <span class="token operator">*</span>

<span class="token keyword">from</span> <span class="token punctuation">.</span> <span class="token keyword">import</span> Item


<span class="token keyword">class</span> <span class="token class-name">UniqueItem</span><span class="token punctuation">(</span>Item<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># 唯一物品，不可重复购买</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> description<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> price<span class="token punctuation">:</span> <span class="token builtin">float</span> <span class="token operator">=</span> <span class="token number">10000</span><span class="token punctuation">,</span> hasTarget<span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">,</span> need_attitude<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> anonymous<span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
                 Functions<span class="token punctuation">:</span> <span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>name<span class="token punctuation">,</span> description<span class="token punctuation">,</span> price<span class="token punctuation">,</span> hasTarget<span class="token punctuation">,</span> need_attitude<span class="token punctuation">,</span> anonymous<span class="token punctuation">,</span> Functions<span class="token punctuation">)</span>

    <span class="token comment"># 重写基类的购买前函数，在购买前进行判断，当物品已购买时中断购买流程，并提醒。</span>
    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">beforePurchase</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> QQ<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> Targets<span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span> Num<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> bot<span class="token punctuation">:</span> Bot <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span> event<span class="token punctuation">:</span> Event <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span> matcher<span class="token punctuation">:</span> Matcher <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
                             state<span class="token punctuation">:</span> T_State <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        item <span class="token operator">=</span> DB_Item<span class="token punctuation">.</span>getUserItem<span class="token punctuation">(</span>QQ<span class="token punctuation">,</span> self<span class="token punctuation">.</span>name<span class="token punctuation">)</span>
        <span class="token keyword">if</span> item<span class="token punctuation">.</span>Quantity <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> onebotV11<span class="token punctuation">.</span>Event<span class="token punctuation">)</span><span class="token punctuation">:</span>
                msg <span class="token operator">=</span> onebotV11<span class="token punctuation">.</span>MessageSegment<span class="token punctuation">.</span>at<span class="token punctuation">(</span>QQ<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string-interpolation"><span class="token string">f&quot;唯一物品，不可重复购买。&quot;</span></span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                msg <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;唯一物品，不可重复购买。&quot;</span></span>
            <span class="token keyword">await</span> matcher<span class="token punctuation">.</span>send<span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
            <span class="token keyword">raise</span> UniqueItemException

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li></li></ol>`,6),e=[o];function c(i,l){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","Shop.html.vue"]]);export{k as default};
